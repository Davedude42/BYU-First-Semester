# -*- coding: utf-8 -*-
"""Intro_to_Python_II.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/163ZSwSYEPUd3wIZSNaGOMhR2A-PqtYhF

# **Lab 2 - Introduction to Python programming II**

Enter your code in the spaces provided. Do not change any of the variable names or function names that are already provided for you. In places where we specify the name of the return value, make sure that your code produces the a value with the correct name.
"""

# Do not edit this cell.

LabID="Lab2"

try:
  from graderHelp import ISGRADEPLOT
except ImportError:
  ISGRADEPLOT = True

"""**Enter your name, section number, and BYU NetID**"""

# Enter your first and last names in between the quotation marks.

first_name="David"

last_name="Haroldsen"

# Enter your Math 215 section number in between the quotation marks.

section_number="2"

# Enter your BYU NetID in between the quotation marks.  NOT YOUR BYU ID NUMBER!

BYUNetID="davedude"

"""**Problem 1**"""

first_elem=1   # Replace the value of 0 with the number described in Problem 1.

"""**Problem 2**"""

def sum_list(L):
  return sum(L)

"""**Problem 3**"""

def list_relu(L):
  new_list=L.copy()  # Remember to create a copy of your list.  After this lab you'll need to remember to do it on your own.
  for i in range(len(new_list)):
    if new_list[i] < 0:
      new_list[i] = 0

  return new_list

"""**Problem 4**"""

import numpy as np  # Importing NumPy

my_var=(np.exp(5) - np.log(np.sqrt(5))) / np.exp(np.cos(3))   # Replace the value of 0 with the required value from Problem 4.

"""**Problem 5**"""

v = np.array([1, 3, -2, 4, 5])
u = np.array([1, 1, -2, 1, 1])
w = np.array([1, 0, 1, 0, 1])

my_vect_var = (np.dot(v, u)/np.dot(u, u)) * u + (np.dot(v, w)/np.dot(w, w)) * w   # Replace the value of 0 with the required value from Problem 5.

"""**Problem 6**"""

def first_rpt(M):
  new_matrix=M.copy()  # Remember to create a copy of your matrix.  After this lab you'll need to remember to do it on your own.

  for i in range(1, len(new_matrix)):
    new_matrix[i] = new_matrix[0]
  return new_matrix

"""**Problem 7**"""

def matrix_sum(M):
  sum = 0
  for r in range(len(M)):
    for c in range(len(M[0,:])):
      sum += M[r, c]
  return sum

"""**Problem 8**"""

long_list=[np.pow(0.5, i) for i in range(1, 101)]
"""**Problem 9**"""

very_long_list=[i ** j for j in range(1, 100) for i in range(1, 4)]
